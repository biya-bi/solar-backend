/**
 *
 */
package org.rainbow.solar.rest.controller;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;

import org.rainbow.solar.RequestMappings;
import org.rainbow.solar.model.DailyElectricity;
import org.rainbow.solar.rest.err.PanelNotFoundError;
import org.rainbow.solar.service.DailyElectricityService;
import org.rainbow.solar.service.PanelService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author biya-bi
 *
 */
@CrossOrigin
@RestController
@RequestMapping(RequestMappings.PANEL_ENDPOINT)
public class DailyElectricityController {
	@Autowired
	private PanelService panelService;

	@Autowired
	private DailyElectricityService dailyElectricityService;

	/**
	 * This end point is used by Front end charts component to plot the daily
	 * statistics of electricity generated by this panel from the day it was
	 * registered to end of previous day.
	 * 
	 * @param panelId The ID of the panel.
	 * @return
	 */
	@GetMapping(path = "/{panelId}/daily")
	public ResponseEntity<?> getBeforeToday(@PathVariable(value = "panelId") Long panelId) {
		if (!panelService.exists(panelId)) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body(new PanelNotFoundError(panelId));
		}
		List<DailyElectricity> dailyElectricityForPanel = dailyElectricityService
				.getBeforeDate(panelId, LocalDateTime.of(LocalDate.now(), LocalTime.MIDNIGHT));
		return ResponseEntity.ok(dailyElectricityForPanel);
	}

}